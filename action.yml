name: 'Lacework Scanner'
description: "Scan container images for vulnerabitilies using Lacework"
inputs:
  tags:  # id of input
    description: 'image repo and tags'
    required: true
    default: ''
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - id: tags
      uses: actions/github-script@v6
      with:
        script: |
          let IMAGE_NAME="git/mr-menno/test"
          let IMAGE_TAGS="latest"
          let TAGS="git/mr-menno/test:latest"
          if(TAGS) {
            let _TAGS = TAGS.match(/(.*):([^\/]+)$/);
            if(_TAGS) {
              console.log(_TAGS);
              return _TAGS;
            } else {
              console.log("uh oh");
            }
          }
    - id: test
      run: echo ${{ toJSON(steps.tags)}}
      shell: bash
    - id: image-tags
      run: ./split_image_tag.sh ${{ inputs.tags }}
      shell: bash
    - name: dump context
      run: env
      shell: bash
    - uses: actions/upload-artifact@v3
      with:
        name: lacework-scan-results
        path: lw-scan-result.*
    - uses: actions/github-script@v6
      with:
        script: |
          //const core = require('@actions/core');
          //const github = require('@actions/github');
          //console.log(context);
          const policy = require('./policy.js');
          let policy_result = policy.result(github);
          
          await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: policy_result.message
          })
          process.exit(policy_result.code)
